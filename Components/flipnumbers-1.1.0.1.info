{"Name":"Flip Numbers","Id":1321,"Alias":"flipnumbers","Description":"`FlipNumbers` emulates the old-fashioned \"split-flap\" display, once\ncommonly used in clocks and timetables.  `FlipNumbers` supports iOS and\nAndroid, and allows you to customize the flip animation duration.\n\n### Adding a `FlipNumbersView` to your iOS app:\n\n```csharp\nusing FlipNumbers;\n...\n\npublic override void ViewDidLoad ()\n{\n  base.ViewDidLoad ();\n\n  var flipper = new FlipNumbersView (digitsCount: 4) {\n    Center = View.Center,\n\t\tValue = 1234\n  };\n  View.AddSubview (flipper);\n}\n```\n\n### Adding a `FlipNumbersView` to your Android app:\n\n```csharp\nusing FlipNumbers;\n...\n\nprotected override void OnCreate (Bundle bundle)\n{\n  base.OnCreate (bundle);\n  \n  var flipper = new FlipNumbersView (this, digitsCount: 4) {\n\t\tValue = 1234\n\t};\n  AddContentView (flipper, new ViewGroup.LayoutParams (\n    ViewGroup.LayoutParams.FillParent, ViewGroup.LayoutParams.FillParent));\n}\n```\n\n### Changing the display\n\n```csharp\n// Without animation\nflipper.Value = 1234;\nflipper.SetValue (3456, animated: false);\n\n// With animation\nflipper.SetValue (4567, animated: true);\n```\n\n*This control was created by [Touch Instinct](http://touchinstinct.com).*\n*Screenshot assembled with [PlaceIt](http://placeit.breezi.com/).*\n","Version":"1.1.0.1","Summary":"An animated, \"split-flap\" style digit display.","QuickStart":"`FlipNumbers` emulates the old-fashioned \"split-flap\" display, once\ncommonly used in clocks and timetables.  `FlipNumbers` supports iOS and\nAndroid, and allows you to customize the flip animation duration.\n\n## Examples\n\n### Adding a `FlipNumbersView` to your iOS app:\n\nFirst, you need to add `\"Fonts/Bebas.ttf\"` to your Info.plist file as\nshown in [this screenshot](https://dl.dropbox.com/u/217582/xamarin/component-store/flip-numbers-plist.jpg).  Then add a `FlipNumbersView` from a controller:\n\n```csharp\nusing FlipNumbers;\n...\n\npublic override void ViewDidLoad ()\n{\n  base.ViewDidLoad ();\n\n  var flipper = new FlipNumbersView (digitsCount: 4) {\n    Center = View.Center,\n\t\tValue = 1234\n  };\n  View.AddSubview (flipper);\n}\n```\n\n### Adding a `FlipNumbersView` to your Android app:\n\n```csharp\nusing FlipNumbers;\n...\n\nprotected override void OnCreate (Bundle bundle)\n{\n  base.OnCreate (bundle);\n  \n  var flipper = new FlipNumbersView (this, digitsCount: 4) {\n\t\tValue = 1234\n\t};\n  AddContentView (flipper, new ViewGroup.LayoutParams (\n    ViewGroup.LayoutParams.FillParent, ViewGroup.LayoutParams.FillParent));\n}\n```\n\n### Changing the display\n\n```csharp\n// Without animation\nflipper.Value = 1234;\nflipper.SetValue (3456, animated: false);\n\n// With animation\nflipper.SetValue (4567, animated: true);\n```\n\n### Customization\n\nOn iOS, the flip duration unit is seconds:\n\n```csharp\n// Change flip animation duration (default is 0.2 seconds)\nflipper.FlipDuration = 0.5;\n```\n\nOn Android, the flip duration unit is milliseconds:\n\n```csharp\n// Change flip animation duration (default is 200 milliseconds)\nflipper.FlipDuration = 500;\n```\n\n### Adding a FlipNumbersView to an AXML layout\n\n```xml\n\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" ... \u003e\n  \u003cFlipNumbers.FlipNumbersView\n    digits_count=\"4\"\n    flip_duration=\".5\"\n    android:id=\"@+id/flipNumbersView\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\" /\u003e\n\u003c/LinearLayout\u003e\n```\n","Hash":"2bc8f89debb20ce2594e4b18e8627d2d","TargetPlatforms":["ios","android"],"TrialHash":null}